# Generated by Django 2.0.1 on 2019-03-02 12:15

import ckeditor.fields
from django.conf import settings
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import shop.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.BigIntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('attribute', models.CharField(default='', max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Attribute',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateField(auto_created=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('title', models.CharField(help_text='Title Name of Blog/Article', max_length=150)),
                ('blog_type', models.CharField(choices=[('blog', 'Blog'), ('news', 'News'), ('deals', 'Deals')], default='blog', max_length=10)),
                ('description', ckeditor.fields.RichTextField()),
                ('slug', models.SlugField(default='', max_length=120)),
                ('card_image', models.ImageField(help_text='For Better Viewing Experience Please make sure Image size should be 370W x 220H', null=True, upload_to=shop.models.other_file_upload_location, validators=[shop.models.Blog.validate_card_image])),
                ('cover_image', models.ImageField(help_text='For Better Viewing Experience Please make sure Image size should be 872W x 472H', null=True, upload_to=shop.models.other_file_upload_location, validators=[shop.models.Blog.validate_cover_image])),
            ],
        ),
        migrations.CreateModel(
            name='BlogAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, help_text='Will Update Soon', max_length=200)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Attribute')),
                ('blog', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Blog')),
            ],
            options={
                'verbose_name_plural': 'Blog Attribute',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(max_length=1000)),
                ('image', models.ImageField(blank=True, null=True, upload_to=shop.models.other_file_upload_location, validators=[shop.models.validate_image_file])),
                ('is_developer', models.BooleanField(default=True, verbose_name='Developer')),
                ('is_publisher', models.BooleanField(default=True, verbose_name='Publisher')),
                ('is_manufacturer', models.BooleanField(default=True, verbose_name='Manufacturer')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(default='', max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CSVImporter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('data_type', models.CharField(choices=[('PD', 'Product')], max_length=10, verbose_name='Data Type')),
                ('path', models.FileField(storage=django.core.files.storage.FileSystemStorage(location='D:\\Game Hunter\\hunterbackend\\Game Hunter\\gamehunter\\media'), upload_to='csv_file_uploads', validators=[shop.models.validate_csv_file])),
            ],
            options={
                'verbose_name_plural': 'CSV Importer',
            },
        ),
        migrations.CreateModel(
            name='ExceptionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('views', models.CharField(max_length=60, verbose_name='View')),
                ('exceptionclass', models.CharField(max_length=120, verbose_name='Exception Class')),
                ('message', models.TextField(max_length=1000, verbose_name='Exception Message')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=20)),
                ('description', models.TextField(max_length=500)),
            ],
            options={
                'verbose_name': 'Game Genre',
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to=shop.models.get_product_photo_path, validators=[shop.models.validate_image_file])),
                ('item_order', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'ordering': ['item_order'],
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('duration', models.PositiveSmallIntegerField(default=0)),
                ('additional_month', models.PositiveSmallIntegerField(default=0)),
                ('swaps', models.PositiveSmallIntegerField(default=0, verbose_name='Total Swaps')),
                ('description', ckeditor.fields.RichTextField()),
                ('subscription_amount', models.DecimalField(decimal_places=0, default=0, max_digits=5, validators=[shop.models.min_value_validator])),
                ('security_deposit', models.DecimalField(decimal_places=0, default=0, max_digits=5, validators=[shop.models.min_value_validator])),
                ('term_condition', ckeditor.fields.RichTextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to=shop.models.other_file_upload_location, validators=[shop.models.validate_image_file])),
                ('image1', models.ImageField(blank=True, null=True, upload_to=shop.models.other_file_upload_location, validators=[shop.models.validate_image_file])),
                ('slug', models.SlugField(default='', max_length=120, verbose_name='Slug')),
                ('discount', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=2, validators=[shop.models.min_value_validator])),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(default='', max_length=120, verbose_name='Slug')),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('launch_date', models.DateField(blank=True, null=True)),
                ('item_status', models.CharField(choices=[('I', 'In Stock'), ('O', 'Out of Stock')], default='O', max_length=20)),
                ('condition', models.CharField(blank=True, choices=[('N', 'New'), ('U', 'Used')], default='N', max_length=10, null=True)),
                ('mrp', models.DecimalField(decimal_places=0, default=0, max_digits=5, validators=[shop.models.min_value_validator])),
                ('discount', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=2, validators=[shop.models.min_value_validator])),
                ('hunter_discount', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=2, validators=[shop.models.min_value_validator])),
                ('total_discount', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=2)),
                ('delivery_charges', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=4)),
                ('active', models.BooleanField()),
                ('is_featured', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Category')),
                ('developer', models.ForeignKey(blank=True, limit_choices_to={'is_developer': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='developer', to='shop.Brand')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Genre')),
                ('manufacturer', models.ForeignKey(blank=True, limit_choices_to={'is_manufacturer': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manufacturer', to='shop.Brand')),
                ('plan', models.ManyToManyField(blank=True, related_name='products', to='shop.Plan')),
                ('publisher', models.ForeignKey(blank=True, limit_choices_to={'is_publisher': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='publisher', to='shop.Brand')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Enter Value of Attribute', max_length=200)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Attribute')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Product')),
            ],
            options={
                'verbose_name': 'Product Attribute',
            },
        ),
        migrations.CreateModel(
            name='PromoCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('name', models.CharField(blank=True, max_length=150)),
                ('type', models.CharField(choices=[('coverpage_center', 'Coverpage Center'), ('coverpage_bottom', 'Coverpage Bottom'), ('coverpage_top', 'Coverpage Top'), ('banner_right', 'Banner Right'), ('banner_left', 'Banner Left')], default='coverpage_top', max_length=100)),
                ('active', models.BooleanField()),
                ('link', models.CharField(blank=True, default='', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('phone_number', models.BigIntegerField(blank=True, null=True)),
                ('subscribed', models.BooleanField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='photo',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Product'),
        ),
        migrations.AddField(
            model_name='photo',
            name='promocard',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.PromoCard'),
        ),
        migrations.AddField(
            model_name='blog',
            name='product',
            field=models.ManyToManyField(blank=True, related_name='blog', to='shop.Product'),
        ),
        migrations.AddField(
            model_name='address',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.UserProfile'),
        ),
    ]
